<?xml version="1.0"?>
<project name="XmlTask" default="main" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="java.baseline" value="1.5"/>
  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jarfile" value="${build.dir}/xmltask.jar"/>
  <property name="tarfile" value="${build.dir}/xmltask.tar"/>

  <!-- Ivy -->
  <property name="ivy.version" value="2.5.0"/>
  <property name="ivy.dir" value="${user.home}/.ivy2/cache/org.apache.ivy/jars"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <available property="has.ivy" file="${ivy.dir}/${ivy.jar.name}" type="file"/>

  <target name="get-ivy" unless="has.ivy">
    <mkdir dir="${ivy.dir}"/>
    <get usetimestamp="true" src="http://apache.mirrors.spacedump.net//ant/ivy/${ivy.version}/maven2/${ivy.version}/${ivy.jar.name}"
         skipexisting="true"
         dest="${ivy.dir}/${ivy.jar.name}"/>
  </target>

  <target name="init-ivy" depends="get-ivy">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.dir}/${ivy.jar.name}"/>
    <ivy:settings file="${basedir}/ivy.settings.xml"/>
  </target>

  <target name="init" depends="init-ivy">
    <!-- prepare dirs -->
    <mkdir dir="${classes.dir}"/>

    <!-- versioning -->
    <property file="xmltask.properties"/>
    <property name="v_jarfile" value="${build.dir}/xmltask-v${com.oopsconsultancy.xmltask.version}.jar"/>
    <property name="v_tarfile" value="${build.dir}/xmltask-v${com.oopsconsultancy.xmltask.version}.tar"/>
  </target>

  <target name="resolve" depends="init">
    <ivy:resolve file="ivy.xml"/>
    <ivy:cachepath pathid="compile.classpath" conf="compile" type="jar"/>
    <ivy:cachepath pathid="test.classpath" conf="test" type="jar"/>
  </target>

  <target name="javac" depends="resolve" description="Java source build">
    <javac srcdir="src/main/java" destdir="${classes.dir}" debug="on" nowarn="true"
           includeantruntime="false" source="${java.baseline}" target="${java.baseline}">
      <include name="**/*.java"/>
      <classpath>
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <path refid="compile.classpath"/>
      </classpath>
    </javac>
    <copy file="xmltask.properties" todir="${classes.dir}"/>
    <!-- we've built against dummy XPathAPI classes so we
         can compile pre/post JDK 1.5 classes in the absence
         of one or the other. We then delete the dummy classes -->
    <delete dir="${classes.dir}/com/sun"/>
    <delete dir="${classes.dir}/org/apache"/>
  </target>

  <target name="jar" depends="javac">
    <jar jarfile="${jarfile}" basedir="${classes.dir}"
         includes="com/oopsconsultancy/**/*.class,xmltask.properties"
         excludes="**/test/**/*"/>
  </target>

  <target name="javac.test" depends="javac" description="Java source build">
    <javac srcdir="src/test/java" destdir="${classes.dir}" debug="on" nowarn="true"
           includeantruntime="false" source="${java.baseline}" target="${java.baseline}">
      <include name="**/*.java"/>
      <classpath>
        <pathelement location="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="test" depends="javac.test">
    <junit haltonfailure="true" tempdir="${build.dir}">
      <test name="com.oopsconsultancy.xmltask.test.TestXmlReplacement" todir="${build.dir}"/>
      <classpath>
        <pathelement location="src/test/resources"/>
        <pathelement path="${classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <formatter type="plain" usefile="no"/>
      <formatter type="xml"/>
    </junit>
    <echo>Tests succeed!</echo>
  </target>

  <target name="main" depends="test" description="Complete build/test"/>

  <target name="package" depends="jar" description="Creates the appropriate archives">
    <tar tarfile="${tarfile}">
      <tarfileset dir="src/main/java" includes="**/*.java"/>
      <tarfileset dir="." includes="LICENSE,CREDITS,CHANGES,*.xml,xmltask.properties"/>
      <tarfileset dir="src/site" includes="*.html,*.css,*.gif,*.jpg"/>
    </tar>
    <gzip src="${tarfile}" zipfile="${tarfile}.gz"/>
    <delete file="${tarfile}"/>
    <echo>Created .jar and .tar.gz</echo>
  </target>

  <target name="clean" description="Clean classes">
    <delete dir="${build.dir}"/>
  </target>
</project>
